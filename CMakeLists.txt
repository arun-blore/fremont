cmake_minimum_required (VERSION 3.18)
project(my_vector)

macro(set_compile_options target)
    target_compile_options(${target} PRIVATE "--std=c++17")
    if (${VECTORIZE} EQUAL 1)
        #target_compile_options(${target} PRIVATE "-ftree-vectorize")
        target_compile_options(${target} PRIVATE "-march=native")
        #target_compile_options(${target} PRIVATE "-march=skylake-avx512")
        #target_compile_options(${target} PRIVATE "-mtune=skylake-avx512")
        #target_compile_options(${target} PRIVATE "-ftree-vectorizer-verbose=2")
        #target_compile_options(${target} PRIVATE "-mprefer-vector-width=512")
        #target_compile_options(${target} PRIVATE "-fwhole-program")
        #target_compile_options(${target} PRIVATE "-mavx512pf")
        #target_compile_options(${target} PRIVATE "-fopt-info-vec-missed")
    endif()
    if (${GEN_ASM} EQUAL 1)
        target_compile_options(${target} PRIVATE "-S")
        target_compile_options(${target} PRIVATE "-fverbose-asm")
    endif()
    if (${CMAKE_BUILD_TYPE} EQUAL "Release")
        target_compile_options(${target} PRIVATE "-DNDEBUG")
    endif()
    target_compile_options(${target} PRIVATE "-fmax-errors=5")
endmacro()

if (CMAKE_BUILD_TYPE STREQUAL "Release")
    add_compile_definitions(NDEBUG)
endif()

set (VEC_SOURCES test_my_vector.cpp)
set (LIST_SOURCES test_my_list.cpp)

add_executable(vec_test ${VEC_SOURCES})
target_include_directories (vec_test PUBLIC .)

add_executable(list_test ${LIST_SOURCES})
target_include_directories (list_test PUBLIC .)

#add_executable(gdb_mem gdb_mem.cpp)

set (MAT_SOURCES test_my_mat.cpp)
add_executable(mat_test ${MAT_SOURCES})
target_include_directories(mat_test PUBLIC . lib/papi/include)
set_compile_options(mat_test)
set_target_properties(mat_test PROPERTIES LINK_FLAGS "-lpapi -L../lib/papi/lib")
#set(CMAKE_CXX_FLAGS "--std=c++17")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ftree-vectorize -fopt-info-vec-missed -march=native -ftree-vectorizer-verbose=2 -fopenmp")

#if (${CMAKE_BUILD_TYPE} EQUAL "Release")
#    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DNDEBUG") # disable calls to assert()
#endif()
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pg")
#set_target_properties(mat_test PROPERTIES COMPILE_FLAGS "-pg")
#set_target_properties(mat_test PROPERTIES LINK_FLAGS "-pg")
#set_target_properties(mat_test PROPERTIES COMPILE_FLAGS "-S -fverbose-asm")

add_executable (fmadd_perf_test fmadd_perf_test.cpp)
target_include_directories(fmadd_perf_test PRIVATE . lib/papi/include)
set_compile_options(fmadd_perf_test)
set_target_properties(fmadd_perf_test PROPERTIES LINK_FLAGS "-lpapi -L../lib/papi/lib")
